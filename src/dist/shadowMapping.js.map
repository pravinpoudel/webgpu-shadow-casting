{"version":3,"sources":["shadowMapping.ts"],"names":[],"mappings":"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","file":"shadowMapping.js","sourcesContent":["import * as sphere from \"./utils/sphere\";\r\nimport * as box from \"./utils/box\";\r\nimport { getModelViewMatrix, getProjectionMatrix } from \"./utils/math\";\r\nimport { vec3, mat4 } from \"gl-matrix\";\r\n\r\nimport _shadowVS from \"../shaders/shadowV.wgsl\";\r\nimport _shadowFS from \"../shaders/shadowF.wgsl\";\r\nimport _shadowDepth from \"../shaders/shadowDepth.wgsl\";\r\n\r\n// const canvas: HTMLCanvasElement;\r\nlet device: GPUDevice,\r\n  context: GPUCanvasContext,\r\n  format: GPUTextureFormat,\r\n  size: { width: number; height: number },\r\n  sphereVertexBuffer: GPUBuffer,\r\n  sphereIndicesBuffer: GPUBuffer,\r\n  boxVertexBuffer: GPUBuffer,\r\n  boxIndicesBuffer: GPUBuffer,\r\n  shaderBindGroup: GPUBindGroup,\r\n  _shadowPipeline: GPURenderPipeline,\r\n  _MBuffer: GPUBuffer,\r\n  _cameraViewMatrix: GPUBuffer,\r\n  _CProjectionMatrix: GPUBuffer,\r\n  _LmvpMatrix: GPUBuffer,\r\n  _dLBuffer: GPUBuffer,\r\n  _colorBuffer: GPUBuffer;\r\n\r\nconst xCount: number = 4;\r\nconst yCount: number = 4;\r\nconst lightPosition = [20.0, 100.0, 50.0];\r\nlet cameraPosition = { x: 0, y: 10, z: 10 };\r\nlet eyePosition = vec3.fromValues(\r\n  cameraPosition.x,\r\n  cameraPosition.y,\r\n  cameraPosition.z\r\n);\r\nlet targetPosition = vec3.fromValues(0, 0, 0);\r\n\r\n//orthographic projection dimension\r\nconst left = -40;\r\nconst right = 40;\r\nconst bottom = -40;\r\nconst top = 40;\r\nconst near = -50;\r\nconst far = 200;\r\n\r\nconst screenCanvas: HTMLCanvasElement = <HTMLCanvasElement>(\r\n  document.getElementById(\"main-screen\")\r\n);\r\n\r\nasync function init(canvas: HTMLCanvasElement) {\r\n  const entry: GPU = <GPU>navigator.gpu;\r\n  if (!entry) {\r\n    console.warn(\"webgpu is not supported in your browser !!!\");\r\n    throw new Error(\"webgpu is not supported\");\r\n  }\r\n  const adapter: GPUAdapter = <GPUAdapter>await entry.requestAdapter();\r\n  if (!adapter) {\r\n    throw new Error(\"adapter not found\");\r\n  }\r\n  device = await adapter.requestDevice();\r\n\r\n  if (!device) {\r\n    console.warn(\"no device found in the adapter\");\r\n  }\r\n\r\n  context = <GPUCanvasContext>canvas.getContext(\"webgpu\");\r\n  console.log(context);\r\n\r\n  if (!context) {\r\n    return;\r\n  }\r\n\r\n  // need to find what is this for ??\r\n  format = navigator.gpu.getPreferredCanvasFormat();\r\n  canvas.width = canvas.clientWidth * (window.devicePixelRatio || 1);\r\n  canvas.height = canvas.clientHeight * (window.devicePixelRatio || 1);\r\n  context.configure({\r\n    device: device,\r\n    format: \"bgra8unorm\",\r\n  });\r\n  size = { width: canvas.width, height: canvas.height };\r\n}\r\n\r\nasync function initPipeline() {\r\n  const _shaderPipelineDesc_VB = [\r\n    {\r\n      arrayStride: 8 * 4, // 3(position) + 3(normal) + 2(uv)\r\n      attributes: [\r\n        {\r\n          shaderLocation: 0,\r\n          offset: 0,\r\n          format: \"float32x3\",\r\n        },\r\n        {\r\n          shaderLocation: 1,\r\n          offset: 3 * 4,\r\n          format: \"float32x3\",\r\n        },\r\n        {\r\n          shaderLocation: 2,\r\n          offset: 6 * 4,\r\n          format: \"float32x2\",\r\n        },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const _shaderPipelineDesc_Primitive = {\r\n    topology: \"triangle-list\",\r\n    cullMode: \"back\",\r\n  };\r\n\r\n  const _shaderPipelineDesc_depth = {\r\n    depthWriteEnabled: true,\r\n    depthCompare: \"less\",\r\n    format: \"depth32float\",\r\n  };\r\n  const _vsShaderModule = device.createShaderModule({\r\n    code: _shadowVS,\r\n  });\r\n\r\n  _shadowPipeline = <GPURenderPipeline>await device.createRenderPipeline({\r\n    label: \"light View Depth Pipeline\",\r\n    layout: \"auto\",\r\n    vertex: {\r\n      module: _vsShaderModule,\r\n      entryPoint: \"main\",\r\n      buffers: _shaderPipelineDesc_VB,\r\n    } as GPUVertexState,\r\n    primitive: _shaderPipelineDesc_Primitive as GPUPrimitiveState,\r\n    depthStencil: _shaderPipelineDesc_depth as GPUDepthStencilState,\r\n  });\r\n}\r\n\r\nasync function initVertexBuffer() {\r\n  sphereVertexBuffer = device.createBuffer({\r\n    label: \"sphere vertex store buffer\",\r\n    size: sphere.vertex.byteLength,\r\n    usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST,\r\n    mappedAtCreation: true,\r\n  });\r\n\r\n  var stagingData = new Float32Array(sphereVertexBuffer.getMappedRange());\r\n  stagingData.set(sphere.vertex);\r\n  sphereVertexBuffer.unmap();\r\n\r\n  sphereIndicesBuffer = device.createBuffer({\r\n    label: \"sphere indices store buffer\",\r\n    size: sphere.index.byteLength,\r\n    usage: GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST,\r\n    mappedAtCreation: true,\r\n  });\r\n\r\n  var stagingData2 = new Uint16Array(sphereIndicesBuffer.getMappedRange());\r\n  stagingData2.set(sphere.index);\r\n  sphereIndicesBuffer.unmap();\r\n\r\n  boxVertexBuffer = device.createBuffer({\r\n    label: \"box vertex store buffer\",\r\n    size: box.vertex.byteLength,\r\n    usage: GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST,\r\n    mappedAtCreation: true,\r\n  });\r\n\r\n  var stagingData = new Float32Array(boxVertexBuffer.getMappedRange());\r\n  stagingData.set(box.vertex);\r\n  boxVertexBuffer.unmap();\r\n\r\n  boxIndicesBuffer = device.createBuffer({\r\n    label: \"box indices store buffer\",\r\n    size: box.index.byteLength,\r\n    usage: GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST,\r\n    mappedAtCreation: true,\r\n  });\r\n\r\n  var stagingData2 = new Uint16Array(boxIndicesBuffer.getMappedRange());\r\n  stagingData2.set(box.index);\r\n  boxIndicesBuffer.unmap();\r\n}\r\n\r\nasync function initInstancedBuffer() {\r\n  let cameraProjectionMatrix = getProjectionMatrix(\r\n    screenCanvas.width / screenCanvas.height,\r\n    0.5 * Math.PI,\r\n    0.1,\r\n    1000,\r\n    cameraPosition\r\n  );\r\n  // we will create and pass whole MVP of light\r\n  let lightViewProjectionMatrix = mat4.create();\r\n  mat4.ortho(lightViewProjectionMatrix, left, right, bottom, top, near, far); // it does as (40-(-40) in gl-matrix m4.ortho\r\n  let lightViewMatrix = mat4.create();\r\n  mat4.lookAt(\r\n    lightViewMatrix,\r\n    vec3.fromValues(lightPosition[0], lightPosition[1], lightPosition[2]),\r\n    targetPosition,\r\n    vec3.fromValues(0, 1, 0)\r\n  );\r\n  mat4.multiply(\r\n    lightViewProjectionMatrix,\r\n    lightViewProjectionMatrix,\r\n    lightViewMatrix\r\n  );\r\n\r\n  const viewMatrix = mat4.create();\r\n  mat4.lookAt(\r\n    viewMatrix,\r\n    eyePosition,\r\n    targetPosition,\r\n    vec3.fromValues(0, 0, 0)\r\n  );\r\n\r\n  _dLBuffer = device.createBuffer({\r\n    size: 3 * 4,\r\n    usage: GPUBufferUsage.UNIFORM,\r\n    mappedAtCreation: true,\r\n  });\r\n\r\n  var mappedArray = new Float32Array(_dLBuffer.getMappedRange());\r\n  mappedArray.set(lightPosition);\r\n  _dLBuffer.unmap();\r\n\r\n  var _cameraViewMatrix = device.createBuffer({\r\n    size: 16 * 4,\r\n    usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.UNIFORM,\r\n    mappedAtCreation: true,\r\n  });\r\n\r\n  let viewMatrixStagingBuff = new Float32Array(\r\n    _cameraViewMatrix.getMappedRange()\r\n  );\r\n  viewMatrixStagingBuff.set(viewMatrix);\r\n  _cameraViewMatrix.unmap();\r\n\r\n  _CProjectionMatrix = device.createBuffer({\r\n    size: 16 * 4,\r\n    usage: GPUBufferUsage.UNIFORM,\r\n    mappedAtCreation: true,\r\n  });\r\n  var mappedArray = new Float32Array(_CProjectionMatrix.getMappedRange());\r\n  mappedArray.set(cameraProjectionMatrix);\r\n  _CProjectionMatrix.unmap();\r\n\r\n  _LmvpMatrix = device.createBuffer({\r\n    size: 16 * 4,\r\n    usage: GPUBufferUsage.UNIFORM,\r\n    mappedAtCreation: true,\r\n  });\r\n  var mappedLightArray = new Float32Array(_LmvpMatrix.getMappedRange());\r\n  mappedLightArray.set(lightViewProjectionMatrix);\r\n  _LmvpMatrix.unmap();\r\n\r\n  _MBuffer = device.createBuffer({\r\n    size: xCount * yCount * 16 * 4,\r\n    usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,\r\n    mappedAtCreation: true,\r\n  });\r\n  let mStagedArray = new Float32Array(_MBuffer.getMappedRange());\r\n\r\n  _colorBuffer = device.createBuffer({\r\n    size: xCount * yCount * 4 * 4,\r\n    usage: GPUBufferUsage.UNIFORM,\r\n    mappedAtCreation: true,\r\n  });\r\n\r\n  let colorStagedArray = new Float32Array(_colorBuffer.getMappedRange());\r\n\r\n  const modelMatrices = new Array(xCount * yCount);\r\n  // const modelMatricesData = new Float32Array(xCount * yCount * 16 * 4);\r\n\r\n  const colorData = new Array(xCount * yCount);\r\n  // const colorDataSet = new Float32Array(xCount * yCount * 4);\r\n\r\n  {\r\n    let count = 0;\r\n    let localPositionReference = { x: 0, y: 0, z: 0 };\r\n    for (let i = 0; i < xCount; i++) {\r\n      for (let j = 0; j < yCount; j++) {\r\n        localPositionReference.x = -7.0 + Math.random() * 20.0;\r\n        localPositionReference.y = -10 + Math.random() * 25.0;\r\n        localPositionReference.z = -5 + Math.random() * 20;\r\n        modelMatrices[count] = mat4.create();\r\n        mat4.translate(\r\n          modelMatrices[count],\r\n          modelMatrices[count],\r\n          vec3.fromValues(\r\n            localPositionReference.x,\r\n            localPositionReference.y,\r\n            localPositionReference.z\r\n          )\r\n        );\r\n        mStagedArray.set(modelMatrices[count], 16 * count);\r\n        // modelMatricesData.set(modelMatrices[count], count * 16);\r\n        colorData[count] = [Math.random(), Math.random(), Math.random()];\r\n        colorStagedArray.set(colorData[count], count * 4);\r\n        count++;\r\n      }\r\n    }\r\n  }\r\n  _MBuffer.unmap();\r\n  _colorBuffer.unmap();\r\n}\r\n\r\nasync function stages() {\r\n  await init(screenCanvas);\r\n  await initPipeline();\r\n  await initVertexBuffer();\r\n  await initInstancedBuffer();\r\n}\r\n\r\nstages();\r\n// initShaderBuffer();\r\n\r\n//_shadowPipeline.setVertexBuffer(0, sphereVertexBuffer);\r\n\r\n//\r\n// // in sphere there is vertex count as well but that vertex count is number of vertex in that mesh not number of vec3\r\n// const sphereVertexBuffer = device.createBuffer({\r\n//     size: sphere.vertex.byteLength,\r\n//     usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST,\r\n//     mappedAtCreation: true\r\n// });\r\n\r\n// const sphereIndicesBuffer = device.createBuffer({\r\n//     size: sphere.index.byteLength,\r\n//     usage: GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST,\r\n//     mappedAtCreation: true\r\n// });\r\n\r\n// const boxVertexBuffer = device.createBuffer({\r\n//     size: box.vertices.byteLength,\r\n//     usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST,\r\n//     mappedAtCreation: true\r\n// });\r\n\r\n// const boxIndicesBuffer = device.createBuffer({\r\n//     size: box.vertices.byteLength,\r\n//     usage: GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST,\r\n//     mappedAtCreation: true\r\n// });\r\n\r\n// const sphereBuffer = {\r\n//     vertex:\r\n//     index:\r\n// }\r\n\r\n// const boxBuffer = {\r\n//     vertex:\r\n//     indices:\r\n// }\r\n\r\n// device.queue.writeBuffer(sphereBuffer.vertex, 0, sphereBuffer.vertex);\r\n// device.queue.writeBuffer(sphereBuffer.indices, 0, sphereBuffer.indices);\r\n// device.queue.writeBuffer(boxBuffer.vertex, 0, boxBuffer.vertex);\r\n// device.queue.writeBuffer(boxBuffer.indices, 0, boxBuffer.indices);\r\n"]}